# Generated by Django 5.1.1 on 2024-09-26 13:44

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('numero_identificacion', models.CharField(max_length=20, unique=True)),
                ('tipo_id', models.CharField(choices=[('CC', 'Cédula de ciudadanía'), ('TI', 'Tarjeta de identidad'), ('CE', 'Cédula de extranjería'), ('RC', 'Registro civil'), ('PA', 'Pasaporte'), ('AS', 'Adulto sin identificación'), ('MS', 'Menor sin identificación'), ('NU', 'Número único de identificación'), ('NV', 'Certificado de nacido vivo'), ('SC', 'Salvoconducto'), ('NIT', 'Nit'), ('CD', 'Carnet diplomático'), ('PE', 'Permiso especial de permanencia'), ('RE', 'Residente especial para la paz'), ('PT', 'Permiso por protección temporal'), ('DE', 'Documento extranjero')], max_length=100)),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('telefono', models.CharField(max_length=15)),
                ('fecha_nacimiento', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
